@prefix skolem: <http://eyereasoner.github.io/.well-known/genid/8b98b360-9a70-4845-b52c-c675af60ad01#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix : <http://eyereasoner.github.io/eye/reasoning#>.
@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.
@prefix var: <http://eyereasoner.github.io/var#>.

skolem:proof a r:Proof, r:Conjunction;
    r:component skolem:lemma1;
    r:gives {
        "ingirumimusnocteetconsumimurigni" a :Palindrome.
    }.

skolem:lemma1 a r:Inference;
    r:gives {
        "ingirumimusnocteetconsumimurigni" a :Palindrome.
    };
    r:evidence (
        [ a r:Fact; r:gives {("atom_codes" "ingirumimusnocteetconsumimurigni" (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) e:derive true}]
        skolem:lemma2
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma3.

skolem:lemma2 a r:Inference;
    r:gives {
        ((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        skolem:lemma4
        skolem:lemma5
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma6.

skolem:lemma3 a r:Extraction;
    r:gives {
        @forAll var:x_0. {
            ("atom_codes" "ingirumimusnocteetconsumimurigni" var:x_0) e:derive true.
            (var:x_0) :accept true.
        } => {
            "ingirumimusnocteetconsumimurigni" a :Palindrome.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome-query.n3>].

skolem:lemma4 a r:Extraction;
    r:gives {
        (:push) :initial true.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma5 a r:Inference;
    r:gives {
        ((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push ()) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma7
        skolem:lemma8
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105)];
    r:rule skolem:lemma9.

skolem:lemma6 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1. {
            (var:x_1) :accept true.
        } <= {
            (var:x_0) :initial true.
            (var:x_1 var:x_0 ()) :accept true.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma7 a r:Inference;
    r:gives {
        (:push 105 () :push (105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo ()];
    r:rule skolem:lemma10.

skolem:lemma8 a r:Inference;
    r:gives {
        ((110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma11
        skolem:lemma12
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (110 105)];
    r:rule skolem:lemma9.

skolem:lemma9 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4, var:x_5, var:x_6. {
            (var:x_0 var:x_3 var:x_4) :accept true.
        } <= {
            var:x_0 e:firstRest (var:x_1 var:x_2).
            (var:x_3 var:x_1 var:x_4 var:x_5 var:x_6) :delta true.
            (var:x_2 var:x_5 var:x_6) :accept true.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma10 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            (:push var:x_1 var:x_2 :push var:x_0) :delta true.
        } <= {
            var:x_0 e:firstRest (var:x_1 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma11 a r:Inference;
    r:gives {
        (:push 110 (105) :push (110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105)];
    r:rule skolem:lemma10.

skolem:lemma12 a r:Inference;
    r:gives {
        ((103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (103 (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma13
        skolem:lemma14
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma13 a r:Inference;
    r:gives {
        (:push 103 (110 105) :push (103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 105)];
    r:rule skolem:lemma10.

skolem:lemma14 a r:Inference;
    r:gives {
        ((105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma15
        skolem:lemma16
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma15 a r:Inference;
    r:gives {
        (:push 105 (103 110 105) :push (105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma16 a r:Inference;
    r:gives {
        ((114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (114 (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma17
        skolem:lemma18
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma17 a r:Inference;
    r:gives {
        (:push 114 (105 103 110 105) :push (114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma18 a r:Inference;
    r:gives {
        ((117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma19
        skolem:lemma20
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma19 a r:Inference;
    r:gives {
        (:push 117 (114 105 103 110 105) :push (117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma20 a r:Inference;
    r:gives {
        ((109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma21
        skolem:lemma22
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma21 a r:Inference;
    r:gives {
        (:push 109 (117 114 105 103 110 105) :push (109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma22 a r:Inference;
    r:gives {
        ((105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma23
        skolem:lemma24
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma23 a r:Inference;
    r:gives {
        (:push 105 (109 117 114 105 103 110 105) :push (105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma24 a r:Inference;
    r:gives {
        ((109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (109 (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma25
        skolem:lemma26
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma25 a r:Inference;
    r:gives {
        (:push 109 (105 109 117 114 105 103 110 105) :push (109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma26 a r:Inference;
    r:gives {
        ((117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma27
        skolem:lemma28
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma27 a r:Inference;
    r:gives {
        (:push 117 (109 105 109 117 114 105 103 110 105) :push (117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma28 a r:Inference;
    r:gives {
        ((115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma29
        skolem:lemma30
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma29 a r:Inference;
    r:gives {
        (:push 115 (117 109 105 109 117 114 105 103 110 105) :push (115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma30 a r:Inference;
    r:gives {
        ((110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma31
        skolem:lemma32
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma31 a r:Inference;
    r:gives {
        (:push 110 (115 117 109 105 109 117 114 105 103 110 105) :push (110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma32 a r:Inference;
    r:gives {
        ((111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma33
        skolem:lemma34
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma33 a r:Inference;
    r:gives {
        (:push 111 (110 115 117 109 105 109 117 114 105 103 110 105) :push (111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma34 a r:Inference;
    r:gives {
        ((99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma35
        skolem:lemma36
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma35 a r:Inference;
    r:gives {
        (:push 99 (111 110 115 117 109 105 109 117 114 105 103 110 105) :push (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma36 a r:Inference;
    r:gives {
        ((116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma37
        skolem:lemma38
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma37 a r:Inference;
    r:gives {
        (:push 116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma10.

skolem:lemma38 a r:Inference;
    r:gives {
        ((101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma39
        skolem:lemma40
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#push"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma39 a r:Inference;
    r:gives {
        (:push 101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma41.

skolem:lemma40 a r:Inference;
    r:gives {
        ((101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma42
        skolem:lemma43
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma41 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            (:push var:x_1 var:x_2 :pop var:x_0) :delta true.
        } <= {
            var:x_0 e:firstRest (var:x_1 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma42 a r:Inference;
    r:gives {
        (:pop 101 (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 101];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma43 a r:Inference;
    r:gives {
        ((116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma45
        skolem:lemma46
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma44 a r:Extraction;
    r:gives {
        @forAll var:x_0, var:x_1, var:x_2. {
            (:pop var:x_1 var:x_0 :pop var:x_2) :delta true.
        } <= {
            var:x_0 e:firstRest (var:x_1 var:x_2).
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma45 a r:Inference;
    r:gives {
        (:pop 116 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 116];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma46 a r:Inference;
    r:gives {
        ((99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma47
        skolem:lemma48
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma47 a r:Inference;
    r:gives {
        (:pop 99 (99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (111 110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 99];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma48 a r:Inference;
    r:gives {
        ((111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (111 110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma49
        skolem:lemma50
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma49 a r:Inference;
    r:gives {
        (:pop 111 (111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (110 115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 111];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma50 a r:Inference;
    r:gives {
        ((110 115 117 109 105 109 117 114 105 103 110 105) :pop (110 115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma51
        skolem:lemma52
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma51 a r:Inference;
    r:gives {
        (:pop 110 (110 115 117 109 105 109 117 114 105 103 110 105) :pop (115 117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma52 a r:Inference;
    r:gives {
        ((115 117 109 105 109 117 114 105 103 110 105) :pop (115 117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
        skolem:lemma53
        skolem:lemma54
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma53 a r:Inference;
    r:gives {
        (:pop 115 (115 117 109 105 109 117 114 105 103 110 105) :pop (117 109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 115];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma54 a r:Inference;
    r:gives {
        ((117 109 105 109 117 114 105 103 110 105) :pop (117 109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
        skolem:lemma55
        skolem:lemma56
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma55 a r:Inference;
    r:gives {
        (:pop 117 (117 109 105 109 117 114 105 103 110 105) :pop (109 105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma56 a r:Inference;
    r:gives {
        ((109 105 109 117 114 105 103 110 105) :pop (109 105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
        skolem:lemma57
        skolem:lemma58
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma57 a r:Inference;
    r:gives {
        (:pop 109 (109 105 109 117 114 105 103 110 105) :pop (105 109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma58 a r:Inference;
    r:gives {
        ((105 109 117 114 105 103 110 105) :pop (105 109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
        skolem:lemma59
        skolem:lemma60
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (109 117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma59 a r:Inference;
    r:gives {
        (:pop 105 (105 109 117 114 105 103 110 105) :pop (109 117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (109 117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma60 a r:Inference;
    r:gives {
        ((109 117 114 105 103 110 105) :pop (109 117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
        skolem:lemma61
        skolem:lemma62
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (117 114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma61 a r:Inference;
    r:gives {
        (:pop 109 (109 117 114 105 103 110 105) :pop (117 114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (109 117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 109];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (117 114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma62 a r:Inference;
    r:gives {
        ((117 114 105 103 110 105) :pop (117 114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
        skolem:lemma63
        skolem:lemma64
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (114 105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma63 a r:Inference;
    r:gives {
        (:pop 117 (117 114 105 103 110 105) :pop (114 105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (117 114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 117];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (114 105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma64 a r:Inference;
    r:gives {
        ((114 105 103 110 105) :pop (114 105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
        skolem:lemma65
        skolem:lemma66
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105 103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma65 a r:Inference;
    r:gives {
        (:pop 114 (114 105 103 110 105) :pop (105 103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (114 105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 114];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105 103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma66 a r:Inference;
    r:gives {
        ((105 103 110 105) :pop (105 103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
        skolem:lemma67
        skolem:lemma68
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (103 110 105)];
    r:rule skolem:lemma9.

skolem:lemma67 a r:Inference;
    r:gives {
        (:pop 105 (105 103 110 105) :pop (103 110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105 103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (103 110 105)];
    r:rule skolem:lemma44.

skolem:lemma68 a r:Inference;
    r:gives {
        ((103 110 105) :pop (103 110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
        skolem:lemma69
        skolem:lemma70
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (110 105)];
    r:rule skolem:lemma9.

skolem:lemma69 a r:Inference;
    r:gives {
        (:pop 103 (103 110 105) :pop (110 105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (103 110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 103];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (110 105)];
    r:rule skolem:lemma44.

skolem:lemma70 a r:Inference;
    r:gives {
        ((110 105) :pop (110 105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
        skolem:lemma71
        skolem:lemma72
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo (105)];
    r:rule skolem:lemma9.

skolem:lemma71 a r:Inference;
    r:gives {
        (:pop 110 (110 105) :pop (105)) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (110 105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 110];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo (105)];
    r:rule skolem:lemma44.

skolem:lemma72 a r:Inference;
    r:gives {
        ((105) :pop (105)) :accept true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
        skolem:lemma73
        skolem:lemma74
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo ()];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_3"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_4"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_5"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_6"]; r:boundTo ()];
    r:rule skolem:lemma9.

skolem:lemma73 a r:Inference;
    r:gives {
        (:pop 105 (105) :pop ()) :delta true.
    };
    r:evidence (
        [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo (105)];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_1"]; r:boundTo 105];
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_2"]; r:boundTo ()];
    r:rule skolem:lemma44.

skolem:lemma74 a r:Inference;
    r:gives {
        (() :pop ()) :accept true.
    };
    r:evidence (
        skolem:lemma75
    );
    r:binding [ r:variable [ n3:uri "http://eyereasoner.github.io/var#x_0"]; r:boundTo [ n3:uri "http://eyereasoner.github.io/eye/reasoning#pop"]];
    r:rule skolem:lemma76.

skolem:lemma75 a r:Extraction;
    r:gives {
        (:pop) :final true.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

skolem:lemma76 a r:Extraction;
    r:gives {
        @forAll var:x_0. {
            (() var:x_0 ()) :accept true.
        } <= {
            (var:x_0) :final true.
        }.
    };
    r:because [ a r:Parsing; r:source <http://eyereasoner.github.io/eye/reasoning/preduction/palindrome.n3>].

