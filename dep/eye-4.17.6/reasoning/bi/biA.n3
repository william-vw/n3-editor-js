@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix math: <http://www.w3.org/2000/10/swap/math#>.
@prefix : <http://eulersharp.sourceforge.net/2007/07test#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix list: <http://www.w3.org/2000/10/swap/list#>.
@prefix med: <http://eulersharp.sourceforge.net/2006/02swap/med#>.
@prefix fl: <http://eulersharp.sourceforge.net/2003/03swap/fl-rules#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix string: <http://www.w3.org/2000/10/swap/string#>.
@prefix time: <http://www.w3.org/2000/10/swap/time#>.

{
    {
        (55 66 72 87 56 77 73 69 74 56) e:avg 68.5 .
        68.5 math:equalTo 68.5.
    } => {
        :ea1 :result true.
    }.
} a :PASS.
{
    {
        ("1+1") e:calculate 2 .
        2 math:equalTo 2.
    } => {
        :ec1 :result true.
    }.
} a :PASS.
{
    {
        3 log:equalTo 3 .
        ("sqrt(_width^2+_length^2)" 3 4) e:calculate 5.0 .
        5.0 math:equalTo 5.0.
    } => {
        :ec2 :result true.
    }.
} a :PASS.
{
    {
        ("_period-250" "PT5M2S"^^xsd:dayTimeDuration) e:calculate 52.0 .
        52.0 math:equalTo 52.0.
    } => {
        :ec3 :result true.
    }.
} a :PASS.
{
    {
        ((55 66 72 87 56 77 73 69 74 56) (1.66 1.78 1.87 1.92 1.66 1.89 1.86 1.79 1.8 1.66)) e:cov 0.992777777777778 .
        0.992777777777778 math:equalTo 0.992777777777778.
    } => {
        :eco1 :result true.
    }.
} a :PASS.
{
    {
        ("atom_codes" "HOME" (72 79 77 69)) e:derive true.
    } => {
        :epac1 :result true.
    }.
} a :PASS.
{
    {
        ("date(1970, 1, 1, 0, 0, 0.0, 0, 'UTC', -)") e:compoundTerm "date(1970,1,1,0,0,0.0,0,'UTC',-)".
        ("date_time_stamp" "date(1970,1,1,0,0,0.0,0,'UTC',-)" 0.0) e:derive true.
        0.0 math:equalTo 0.0.
    } => {
        :epdts1 :result true.
    }.
} a :PASS.
{
    {
        ((<http://eyereasoner.github.io/eye/reasoning/bi/biP.n3>) 1) e:findall (_:sk_1 {
            :s :p _:sk_1.
        } (:o1 :o2)).
    } => {
        :ef1 :result true.
    }.
} a :PASS.
{
    {
        ("This is a ~w with number ~w and with an escaped linefeed \n" "test" 5) e:format "This is a test with number 5 and with an escaped linefeed \n".
    } => {
        :ef4 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
        } true) e:graphDifference {
            :a :b :c.
            :d :e :f.
        }.
    } => {
        :egd1 :result true.
    }.
} a :PASS.
{
    {
        (true {
            :d :e :f.
        }) e:graphDifference true.
    } => {
        :egd2 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
        } {
            :d :e :f.
        }) e:graphDifference {
            :a :b :c.
        }.
    } => {
        :egd3 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
            :g :h :i.
        } {
            :d :e :f.
        }) e:graphDifference {
            :a :b :c.
            :g :h :i.
        }.
    } => {
        :egd4 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
        } {
            :a :b :c.
            :u :v :w.
            :x :y :z.
        }) e:graphDifference true.
    } => {
        :egd5 :result true.
    }.
} a :PASS.
{
    {
        (true) e:graphIntersection true.
    } => {
        :egi1 :result true.
    }.
} a :PASS.
{
    {
        (true {
            :d :e :f.
        }) e:graphIntersection true.
    } => {
        :egi2 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
            :g :h :i.
        } true) e:graphIntersection true.
    } => {
        :egi3 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
        } {
            :d :e :f.
        }) e:graphIntersection {
            :d :e :f.
        }.
    } => {
        :egi4 :result true.
    }.
} a :PASS.
{
    {
        ({
            :a :b :c.
            :d :e :f.
            :g :h :i.
        } {
            :g :h :i.
            :d :e :f.
        } {
            :d :e :f.
            :g :h :i.
        }) e:graphIntersection {
            :d :e :f.
            :g :h :i.
        }.
    } => {
        :egi5 :result true.
    }.
} a :PASS.
{
    {
        ((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:length 6.
    } => {
        :el1 :result true.
    }.
} a :PASS.
{
    {
        (8 5 6 7 9 4) e:max 9.
    } => {
        :em1 :result true.
    }.
} a :PASS.
{
    {
        (8 5 6 7 9 4) e:min 4.
    } => {
        :em2 :result true.
    }.
} a :PASS.
{
    {
        (1 3 6 6 7 2 3) e:multisetEqualTo (3 3 7 6 6 2 1).
    } => {
        :eme1 :result true.
    }.
} a :PASS.
{
    {
        (1 3 6 6 7 2 3) e:multisetNotEqualTo (3 3 7 6 2 1).
    } => {
        :emn1 :result true.
    }.
} a :PASS.
{
    {
        :a :b :d.
        ((<http://eyereasoner.github.io/eye/reasoning/bi/biP.n3>) 1) e:optional {
            :g :h :i.
        }.
    } => {
        :eo1 :result true.
    }.
} a :PASS.
{
    {
        ((55 66 72 87 56 77 73 69 74 56) (1.66 1.78 1.87 1.92 1.66 1.89 1.86 1.79 1.8 1.66)) e:pcc 0.9569729506311461 .
        0.9569729506311461 math:equalTo 0.9569729506311461.
    } => {
        :ep1 :result true.
    }.
} a :PASS.
{
    {
        (55 66 72 87 56 77 73 69 74 56) e:rms 69.2105483289939 .
        69.2105483289939 math:equalTo 69.2105483289939.
    } => {
        :erm1 :result true.
    }.
} a :PASS.
{
    {
        ((8 :d) (5 :a) (6 :b) (7 :a) (9 :d) (4 :d)) e:sort ((4 :d) (5 :a) (6 :b) (7 :a) (8 :d) (9 :d)).
    } => {
        :es1 :result true.
    }.
} a :PASS.
{
    {
        (9 3 8 3 5 7 7 9 9 2) e:sort (2 3 5 7 8 9).
    } => {
        :es2 :result true.
    }.
} a :PASS.
{
    {
        (55 66 72 87 56 77 73 69 74 56) e:std 10.426994879744703 .
        10.426994879744703 math:equalTo 10.426994879744703.
    } => {
        :est1 :result true.
    }.
} a :PASS.
{
    {
        "\"test\n" e:stringEscape "\\\"test\\n".
    } => {
        :ese1 :result true.
    }.
} a :PASS.
{
    {
        ("a-b/c-d/e" "-/") e:stringSplit ("a" "b" "c" "d" "e").
    } => {
        :ess1 :result true.
    }.
} a :PASS.
{
    {
        (1 2 3 4 5) e:subsequence (1 2 4).
    } => {
        :esl1 :result true.
    }.
} a :PASS.
{
    {
        ((<http://eyereasoner.github.io/eye/reasoning/bi/biP.n3>) 1) e:fail {
            (1 2 3 4 5) e:subsequence (4 2 1).
        }.
    } => {
        :esl2 :result true.
    }.
} a :PASS.
{
    {
        () e:subsequence ().
    } => {
        :esl3 :result true.
    }.
} a :PASS.
{
    {
        ((0 1) (2 3) (4 5)) e:transpose ((0 2 4) (1 3 5)).
    } => {
        :et1 :result true.
    }.
} a :PASS.
{
    {
        :a :b :c.
        :c e:whenGround {
            :a :b :d.
        }.
    } => {
        :ewg1 :result true.
    }.
} a :PASS.
{
    {
        :a :b :d.
        :d e:whenGround {
            :a :b :d.
        }.
    } => {
        :ewg1 :result true.
    }.
} a :PASS.
{
    {
        "http://www.agfa.com/w3c/euler" e:wwwFormEncode "http%3a%2f%2fwww.agfa.com%2fw3c%2feuler".
    } => {
        :ew1 :result true.
    }.
} a :PASS.
{
    {
        "Hello World!" e:wwwFormEncode "Hello+World%21".
    } => {
        :ew2 :result true.
    }.
} a :PASS.
{
    {
        ((:a :b :c) (:d :e)) list:append (:a :b :c :d :e).
    } => {
        :lista1 :result true.
    }.
} a :PASS.
{
    {
        (:a :b :c) list:first :a.
    } => {
        :listf1 :result true.
    }.
} a :PASS.
{
    {
        :c list:in (:a :b :c).
    } => {
        :listi1 :result true.
    }.
} a :PASS.
{
    {
        (:a :b :c) list:last :c.
    } => {
        :listl1 :result true.
    }.
} a :PASS.
{
    {
        (:a :b :c :d) list:member :b.
    } => {
        :listm1 :result true.
    }.
} a :PASS.
{
    {
        (:a :b :c) list:rest (:b :c).
    } => {
        :listr1 :result true.
    }.
} a :PASS.
{
    {
        (true) log:conjunction true.
    } => {
        :logc1 :result true.
    }.
} a :PASS.
{
    {
        (true {
            :u :v :w.
        } {
            :x :y :z.
            :j :k :l.
        }) log:conjunction {
            :u :v :w.
            :x :y :z.
            :j :k :l.
        }.
    } => {
        :logc2 :result true.
    }.
} a :PASS.
{
    {
        (true {
            :u :v :w.
        } true true) log:conjunction {
            :u :v :w.
        }.
    } => {
        :logc3 :result true.
    }.
} a :PASS.
{
    {
        (:a :b) log:equalTo (:a :b).
    } => {
        :loge1 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :c.
        } log:equalTo {
            :a :b :c.
        }.
    } => {
        :loge2 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :_c.
        } log:equalTo {
            :a :b :_c.
        }.
    } => {
        :loge3 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/abc.n3> log:semantics {
            :a :b :c.
        }.
        {
            :a :b :c.
        } log:equalTo {
            :a :b :c.
        }.
    } => {
        :loges0 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/ab_c.n3> log:semantics {
            :a :b _:e_c_2.
        }.
        {
            :a :b _:e_c_2.
        } log:equalTo {
            :a :b _:e_c_2.
        }.
    } => {
        :loges3 :result true.
    }.
} a :PASS.
{
    {
        ($ "a" "b" "c" $) log:equalTo ($ "a" "b" "c" $).
    } => {
        :loget1 :result true.
    }.
} a :PASS.
{
    {
        {
            :b :a :c.
            :e :d :f.
            :h :g :i.
            :k :j :l.
        } log:includes {
            :k :j :l.
            :e :d :f.
        }.
    } => {
        :logi1 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/medic.n3> log:semantics {
            (med:Ann med:Fever) fl:mu 0.8 .
            (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
            (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
            (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:SevereAsthma) fl:mu 0.001 .
            (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
            med:aspirinHighDose med:prescribedFor med:Fever.
            med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
            med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
            med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
            med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
            med:betaBlocker med:excludedFor med:SevereAsthma.
            med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
            {
                ?U_2 med:prescribedFor ?U_3.
                (?U_4 ?U_3) fl:mu ?U_5.
                ?U_5 math:greaterThan 0.7 .
                ?U_6 e:findall (?U_7 {
                    ?U_2 med:excludedFor ?U_7.
                } ?U_8).
                ?U_6 e:findall (?U_7 {
                    ?U_2 med:excludedFor ?U_7.
                    (?U_4 ?U_7) fl:mu ?U_9.
                    ?U_9 math:notGreaterThan 0.01.
                } ?U_8).
            } => {
                ?U_4 med:isPrescribed ?U_2.
            }.
        }.
        {
            (med:Ann med:Fever) fl:mu 0.8 .
            (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
            (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
            (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:SevereAsthma) fl:mu 0.001 .
            (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
            med:aspirinHighDose med:prescribedFor med:Fever.
            med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
            med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
            med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
            med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
            med:betaBlocker med:excludedFor med:SevereAsthma.
            med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
            {
                ?U_2 med:prescribedFor ?U_3.
                (?U_4 ?U_3) fl:mu ?U_5.
                ?U_5 math:greaterThan 0.7 .
                ?U_6 e:findall (?U_7 {
                    ?U_2 med:excludedFor ?U_7.
                } ?U_8).
                ?U_6 e:findall (?U_7 {
                    ?U_2 med:excludedFor ?U_7.
                    (?U_4 ?U_7) fl:mu ?U_9.
                    ?U_9 math:notGreaterThan 0.01.
                } ?U_8).
            } => {
                ?U_4 med:isPrescribed ?U_2.
            }.
        } log:includes {
            med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
        }.
    } => {
        :logi3 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :c.
        } log:includes {
            :a :b :c.
        }.
    } => {
        :logid0 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :c.
        } log:includes {
            :a :b :c.
        }.
    } => {
        :logid1 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :_c.
        } log:includes {
            :a :b :_c.
        }.
    } => {
        :logid3 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/abc.n3> log:semantics {
            :a :b :c.
        }.
        {
            :a :b :c.
        } log:includes {
            :a :b :c.
        }.
    } => {
        :logis0 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/abc.n3> log:semantics {
            :a :b :c.
        }.
        {
            :a :b :c.
        } log:includes {
            :a :b :c.
        }.
    } => {
        :logis1 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/ab_c.n3> log:semantics {
            :a :b _:e_c_2.
        }.
        {
            :a :b _:e_c_2.
        } log:includes {
            :a :b _:e_c_2.
        }.
    } => {
        :logis3 :result true.
    }.
} a :PASS.
{
    {
        :a log:notEqualTo :b.
    } => {
        :logne1 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :c.
        } log:notEqualTo {
            :a :b :_c.
        }.
    } => {
        :logned1 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :_c.
        } log:notEqualTo {
            :a :b :c.
        }.
    } => {
        :logned2 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/medic.n3> log:semantics {
            (med:Ann med:Fever) fl:mu 0.8 .
            (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
            (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
            (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:SevereAsthma) fl:mu 0.001 .
            (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
            med:aspirinHighDose med:prescribedFor med:Fever.
            med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
            med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
            med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
            med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
            med:betaBlocker med:excludedFor med:SevereAsthma.
            med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
            {
                ?U_10 med:prescribedFor ?U_11.
                (?U_12 ?U_11) fl:mu ?U_13.
                ?U_13 math:greaterThan 0.7 .
                ?U_14 e:findall (?U_15 {
                    ?U_10 med:excludedFor ?U_15.
                } ?U_16).
                ?U_14 e:findall (?U_15 {
                    ?U_10 med:excludedFor ?U_15.
                    (?U_12 ?U_15) fl:mu ?U_17.
                    ?U_17 math:notGreaterThan 0.01.
                } ?U_16).
            } => {
                ?U_12 med:isPrescribed ?U_10.
            }.
        }.
        {
            (med:Ann med:Fever) fl:mu 0.8 .
            (med:Ann med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:AcuteMyocardialInfarction) fl:mu 0.9 .
            (med:Joe med:ActivePepticUlcerDisease) fl:mu 0.006 .
            (med:Joe med:AllergyForAspirin) fl:mu 0.001 .
            (med:Joe med:SevereAsthma) fl:mu 0.001 .
            (med:Joe med:ChronicObstructivePumonaryDisease) fl:mu 0.001 .
            med:aspirinHighDose med:prescribedFor med:Fever.
            med:aspirinLowDose med:prescribedFor med:AcuteMyocardialInfarction.
            med:betaBlocker med:prescribedFor med:AcuteMyocardialInfarction.
            med:aspirinHighDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinHighDose med:excludedFor med:AllergyForAspirin.
            med:aspirinLowDose med:excludedFor med:ActivePepticUlcerDisease.
            med:aspirinLowDose med:excludedFor med:AllergyForAspirin.
            med:betaBlocker med:excludedFor med:SevereAsthma.
            med:betaBlocker med:excludedFor med:ChronicObstructivePumonaryDisease.
            {
                ?U_10 med:prescribedFor ?U_11.
                (?U_12 ?U_11) fl:mu ?U_13.
                ?U_13 math:greaterThan 0.7 .
                ?U_14 e:findall (?U_15 {
                    ?U_10 med:excludedFor ?U_15.
                } ?U_16).
                ?U_14 e:findall (?U_15 {
                    ?U_10 med:excludedFor ?U_15.
                    (?U_12 ?U_15) fl:mu ?U_17.
                    ?U_17 math:notGreaterThan 0.01.
                } ?U_16).
            } => {
                ?U_12 med:isPrescribed ?U_10.
            }.
        } log:notIncludes {
            med:aspirinLowDose med:excludedFor med:SevereAsthma.
        }.
    } => {
        :logni3 :result true.
    }.
} a :PASS.
{
    {
        {
            :a :b :_c.
        } log:notIncludes {
            :a :b :c.
        }.
    } => {
        :lognid2 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/ab_c.n3> log:semantics {
            :a :b _:e_c_2.
        }.
        {
            :a :b _:e_c_2.
        } log:notIncludes {
            :a :b :c.
        }.
    } => {
        :lognis2 :result true.
    }.
} a :PASS.
{
    {
        <http://eyereasoner.github.io/eye/reasoning/bi/ab_c.n3> log:semantics {
            :a :b _:e_c_2.
        }.
        <http://eyereasoner.github.io/eye/reasoning/bi/abc.n3> log:semantics {
            :a :b :c.
        }.
        {
            :a :b _:e_c_2.
        } log:notIncludes {
            :a :b :c.
        }.
    } => {
        :lognis4 :result true.
    }.
} a :PASS.
{
    {
        med:Fever log:uri "http://eulersharp.sourceforge.net/2006/02swap/med#Fever".
    } => {
        :logu1 :result true.
    }.
} a :PASS.
{
    {
        :betaBlocker log:uri "http://eulersharp.sourceforge.net/2007/07test#betaBlocker".
    } => {
        :logu2 :result true.
    }.
} a :PASS.
{
    {
        (1 1) math:difference 0.
    } => {
        :mathd1 :result true.
    }.
} a :PASS.
{
    {
        ("2009-01-25T12:00:00"^^xsd:dateTime "1970-01-01T00:00:00"^^xsd:dateTime) math:difference 1232884800.
    } => {
        :mathd2 :result true.
    }.
} a :PASS.
{
    {
        (2 3.0) math:exponentiation 8.0 .
        (4.0 3.0) math:product 12.0.
    } => {
        :mathe1 :result true.
    }.
} a :PASS.
{
    {
        2 math:greaterThan 1.
    } => {
        :mathg1 :result true.
    }.
} a :PASS.
{
    {
        "02" math:greaterThan "1".
    } => {
        :mathg2 :result true.
    }.
} a :PASS.
{
    {
        (:u :v :u) math:memberCount 3.
    } => {
        :mathm1 :result true.
    }.
} a :PASS.
{
    {
        {
            :s :p :o1.
            :s :p :o2.
            :s :p :o1.
        } math:memberCount 2.
    } => {
        :mathm2 :result true.
    }.
} a :PASS.
{
    {
        7 math:notLessThan 5.
    } => {
        :mathnl1 :result true.
    }.
} a :PASS.
{
    {
        (1 1) math:sum 2.
    } => {
        :maths1 :result true.
    }.
} a :PASS.
{
    {
        ("1" "1") math:sum 2.
    } => {
        :maths2 :result true.
    }.
} a :PASS.
{
    {
        ("1970-01-01T00:00:00+01:00"^^xsd:dateTime) math:sum -3600.
    } => {
        :maths3 :result true.
    }.
} a :PASS.
{
    {
        ("P1D"^^xsd:duration) math:sum 86400.0.
    } => {
        :maths4 :result true.
    }.
} a :PASS.
{
    {
        (:f :g) rdf:first :f.
    } => {
        :rdff1 :result true.
    }.
} a :PASS.
{
    {
        (:f :g) rdf:rest (:g).
    } => {
        :rdfr1 :result true.
    }.
} a :PASS.
{
    {
        ("eul" "er") string:concatenation "euler".
    } => {
        :strc1 :result true.
    }.
} a :PASS.
{
    {
        ("€" "Ø"@en-us) string:concatenation "€Ø".
    } => {
        :strc2 :result true.
    }.
} a :PASS.
{
    {
        ("test " "is \"ok\"") string:concatenation "test is \"ok\"".
    } => {
        :strc3 :result true.
    }.
} a :PASS.
{
    {
        "Rob Smith" string:contains "Smith".
    } => {
        :strcn1 :result true.
    }.
} a :PASS.
{
    {
        "Rob Smith"@en string:contains "Smith"@en.
    } => {
        :strcn2 :result true.
    }.
} a :PASS.
{
    {
        "Tim" string:containsIgnoringCase "IM".
    } => {
        :strci1 :result true.
    }.
} a :PASS.
{
    {
        "abracadabra" string:matches "(a|b|r|c|d)+".
    } => {
        :strm1 :result true.
    }.
} a :PASS.
{
    {
        ("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:scrape "example.org".
    } => {
        :strs1 :result true.
    }.
} a :PASS.
{
    {
        ("{x" "{(.)") string:scrape "x".
    } => {
        :strs2 :result true.
    }.
} a :PASS.
{
    {
        ("http://example.org/1995/manifesto" "http://([^/]+)/([^/]+)") string:search ("example.org" "1995").
    } => {
        :strs3 :result true.
    }.
} a :PASS.
{
    {
        "euler" string:startsWith "eu".
    } => {
        :strs4 :result true.
    }.
} a :PASS.
{
    {
        "2006-12-14"^^xsd:date time:day "14".
    } => {
        :timed1 :result true.
    }.
} a :PASS.
{
    {
        "2006-12-14"^^xsd:date time:month "12".
    } => {
        :timem1 :result true.
    }.
} a :PASS.
{
    {
        "2006-12-14"^^xsd:date time:year "2006".
    } => {
        :timey1 :result true.
    }.
} a :PASS.
